{"version":3,"sources":["./src/app/components/autores/autores-routing.module.ts","./src/app/components/autores/autores.module.ts","./src/app/components/autores/detalle-autor/detalle-autor.component.ts","./src/app/components/autores/detalle-autor/detalle-autor.component.html","./src/app/components/autores/lista-autor/lista-autor.component.ts","./src/app/components/autores/lista-autor/lista-autor.component.html","./src/app/models/autor.model.ts","./src/app/services/autor.service.ts"],"names":[],"mappings":"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","file":"components-autores-autores-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DetalleAutorComponent } from './detalle-autor/detalle-autor.component';\nimport { ListaAutorComponent } from './lista-autor/lista-autor.component';\n\nconst routes: Routes = [ {\n  path: '', component: ListaAutorComponent\n},\n{\n  path: 'form', component: DetalleAutorComponent\n},\n{\n  path: 'form/:id', component: DetalleAutorComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AutoresRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListaAutorComponent } from './lista-autor/lista-autor.component';\nimport { AutoresRoutingModule } from './autores-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { DetalleAutorComponent } from './detalle-autor/detalle-autor.component';\n\n@NgModule({\n  declarations: [ListaAutorComponent, DetalleAutorComponent],\n  imports: [\n    CommonModule,\n    AutoresRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AgGridModule,\n    NgxDatatableModule,\n    NgxMaskModule.forChild()\n  ],\n  exports:[\n    ListaAutorComponent,\n    DetalleAutorComponent\n  ]\n})\nexport class AutoresModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Autor } from 'src/app/models/autor.model';\nimport { AutorService } from 'src/app/services/autor.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-detalle-autor',\n  templateUrl: './detalle-autor.component.html',\n  styleUrls: ['./detalle-autor.component.css']\n})\nexport class DetalleAutorComponent implements OnInit {\n\n  public autor: Autor = new Autor();\n  public autorForm: FormGroup;\n  public consulta: boolean = false;\n\n  constructor(private fb: FormBuilder,\n    private activatedRoute: ActivatedRoute,\n    private _autorService: AutorService,\n    private router: Router,\n    private _translateService: TranslateService) { }\n\n  get nombre(){ return this.autorForm.get('nombre'); }\n\n  get apellido(){ return this.autorForm.get('apellido'); }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      let id:number = +params.get('id');\n      if(id !== 0){\n        this.consulta = true;\n        this._autorService.obtenerAutor(id).subscribe(autor => this.asignarValores(autor));\n      }\n    });\n    this.initForm();\n  }\n\n  public initForm(): void {\n    this.autorForm = this.fb.group({\n      nombre: [{value:'' , disabled: this.consulta}, Validators.required],\n      apellido: [{value:'' , disabled: this.consulta}, Validators.required]\n    });\n  }\n\n  public asignarValores(autor: Autor) : void {\n    this.autor = autor;\n    this.autorForm.setValue({\n      nombre: autor.nombre,\n      apellido: autor.apellido\n    });\n  }\n\n  public guardarAutor() : void {\n\n    if(this.autorForm.invalid){ return;}\n\n    const { nombre, apellido } = this.autorForm.value;\n\n    this.autor.nombre = nombre;\n    this.autor.apellido = apellido;\n\n    this._autorService.crearAutor(this.autor)\n      .subscribe(autor => {\n        Swal.fire(this._translateService.instant('DIALOG.AUTHOR_ADD'), `${this._translateService.instant('DIALOG.AUTHOR_ADD_TEXT')} ${autor.nombre} ${autor.apellido} ${this._translateService.instant('DIALOG.ADDED_SUCCESSFUL')}`,'success');\n        this.router.navigate(['/autores']);\n      },\n      err => {\n        Swal.fire({\n          title: `${this._translateService.instant('DIALOG.ERROR_TITLE')}`,\n          text:  err.error.error,\n          icon: 'error'\n        })\n      }\n    );\n  }\n\n  public eliminarAutor(): void {\n    Swal.fire({\n      title: this._translateService.instant('DIALOG.DELETE_TITLE'),\n      text: `${this._translateService.instant('DIALOG.AUTHOR_DELETE_ASK')} ${this.autor.nombre} ${this.autor.apellido}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: this._translateService.instant('DIALOG.DELETE_YES'),\n      cancelButtonText: this._translateService.instant('DIALOG.DELETE_NO'),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._autorService.borrarAutor(this.autor.id).subscribe(resp => {\n          Swal.fire(\n            this._translateService.instant('DIALOG.AUTHOR_DELETED'),\n            `${resp}`,\n            'success'\n          )\n          this.router.navigate(['autores']);\n        },\n        err => {\n          Swal.fire({\n            title: `${this._translateService.instant('DIALOG.ERROR_TITLE')}`,\n            text:  err.error.error,\n            icon: 'error'\n          })\n        });\n\n      }\n    })\n  }\n\n}\n","<div class=\"card mt-2\">\n    <div class=\"card-header text-center bg-card text-white\" *ngIf=\"!consulta\">{{ \"AUTHOR.ADD_AUTHOR_TITLE\" | translate}}</div>\n    <div class=\"card-header text-center bg-card text-white\" *ngIf=\"consulta\"> {{ \"AUTHOR.CONSULT_AUTHOR_TITLE\" | translate}} </div>\n    <div class=\"card-body txt-content\">\n        <form [formGroup]=\"autorForm\" (ngSubmit)=\"guardarAutor()\">\n            <div class=\"form-group row\">\n                <label class=\"col-form-label col-sm-2\">{{ \"AUTHOR.NAME\" | translate}} </label>\n                <input [class.is-invalid]=\"nombre.invalid && nombre.touched\" type=\"text\" formControlName=\"nombre\" class=\"form-control\" required>\n                <small class=\"text-danger \" *ngIf=\"nombre.invalid && nombre.touched \">{{ \"VALIDATION.NAME_REQUIRED\" | translate}}</small>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-form-label col-sm-2\">{{ \"AUTHOR.LAST_NAME\" | translate}} </label>\n                <input [class.is-invalid]=\"apellido.invalid && apellido.touched\" type=\"text\" formControlName=\"apellido\" class=\"form-control\" required>\n                <small class=\"text-danger \" *ngIf=\"apellido.invalid && apellido.touched \">{{ \"VALIDATION.LAST_NAME_REQUIRED\" | translate}}</small>\n            </div>\n            <div class=\"form__content-submit\">\n                <button type=\"submit\" *ngIf=\"!consulta\" [disabled]=\"autorForm.invalid\" class=\"form__submit\">\n                  <i class='bx bx-save icon-style'></i>\n                  {{ 'SHARED.BUTTONS.SAVE' | translate }}\n              </button>\n                <button type=\"button\" (click)=\"eliminarAutor()\" *ngIf=\"consulta\" class=\"form__submit\">\n                  <i class='bx bx-trash icon-style'></i>\n                  {{ 'SHARED.BUTTONS.DELETE' | translate }}\n              </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SelectionType, ColumnMode } from '@swimlane/ngx-datatable';\nimport { Autor } from 'src/app/models/autor.model';\nimport { AutorService } from '../../../services/autor.service';\n\n@Component({\n  selector: 'app-lista-autor',\n  templateUrl: './lista-autor.component.html',\n  styleUrls: ['./lista-autor.component.css']\n})\nexport class ListaAutorComponent implements OnInit {\n\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\n\n  public data = [];\n  public cols = [];\n  public selected = [];\n  public SelectionType = SelectionType;\n  public ColumnMode = ColumnMode;\n\n  public autores: Autor[] = [];\n\n  constructor(private _autorService: AutorService,\n    private _translateService: TranslateService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.initColumnsTable();\n    this._autorService.getAutores().subscribe(resp => this.data = resp);\n  }\n\n  public initColumnsTable(): void {\n    this.cols = [\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: this._translateService.instant('AUTHOR.ID')\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: this._translateService.instant('AUTHOR.NAME')\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: this._translateService.instant('AUTHOR.LAST_NAME')\n      }\n    ];\n  }\n\n  onSelect({ selected }) {\n    this.router.navigate(['/autores/form/',selected[0].id]);\n  }\n\n}\n","<div class=\"card mb-3\">\n    <div class=\"card-header text-center bg-card text-white\"> {{ \"BOOK.BOOK_TITLE\" | translate}} </div>\n    <div class=\"card-body txt-content\">\n        <h5 class=\"card-title\">{{ \"AUTHOR.AUTHOR_LIST\" | translate }}</h5>\n        <div class=\"mb-3 form__content-submit\">\n            <button type=\"button\" class=\"form__submit\" routerLink=\"/autores/form\">\n              <i class='bx bxs-folder-plus icon-style'></i>\n              {{ \"SHARED.BUTTONS.ADD_AUTHOR\" | translate }}\n          </button>\n        </div>\n        <ngx-datatable class=\"material\" [rows]=\"data\" [columns]=\"cols\" [columnMode]=\"ColumnMode.force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"5\" [selected]=\"selected\" [selectionType]=\"SelectionType.single\" (select)=\"onSelect($event)\">\n        </ngx-datatable>\n        <ng-template #hdrTpl let-column=\"column\">{{ column.name }}</ng-template>\n        <ng-template #editTmpl let-row=\"row\" let-column=\"column\" let-value=\"value\">\n            <ng-container>\n                {{ value }}\n            </ng-container>\n        </ng-template>\n    </div>\n</div>\n","export class Autor {\r\n  id: number;\r\n  nombre: string;\r\n  apellido: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Autor } from '../models/autor.model';\nimport { catchError, map } from 'rxjs/operators';\nimport { CreateAutor } from '../models/create.autor.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutorService {\n\n  private urlEndpoint: string = environment.urlEndpoint;\n  private controller: string = 'autores';\n\n  constructor(private http: HttpClient) { }\n\n  public getAutores() : Observable<Autor[]>  {\n    return this.http.get(`${this.urlEndpoint}/${this.controller}`)\n    .pipe(\n      map((resp: any) => resp['data'] as Autor[] ),\n      catchError(err => {\n        return throwError(err);\n      })\n    );\n  }\n\n  public borrarAutor(id: number): Observable<string> {\n    return this.http.delete(`${this.urlEndpoint}/${this.controller}/${id}`)\n    .pipe(\n      map((resp: any) => resp['message'] as string ),\n      catchError(err => {\n        return throwError(err);\n      })\n    );\n  }\n\n  public crearAutor(createAutor: CreateAutor): Observable<Autor> {\n    return this.http.post(`${this.urlEndpoint}/${this.controller}`, createAutor).pipe(\n      map((resp: any) => resp['data'] as Autor),\n      catchError(err => {\n        return throwError(err);\n      })\n    );\n  }\n\n  public obtenerAutor(id: number) : Observable<Autor> {\n    return this.http.get(`${this.urlEndpoint}/${this.controller}/${id}`)\n    .pipe(\n      map((resp: any) => resp['data'] as Autor ),\n      catchError(err => {\n        return throwError(err);\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}