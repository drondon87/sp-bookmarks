{"version":3,"sources":["./src/app/components/categorias/categorias-routing.module.ts","./src/app/components/categorias/categorias.module.ts","./src/app/components/categorias/detalle-categoria/detalle-categoria.component.ts","./src/app/components/categorias/detalle-categoria/detalle-categoria.component.html","./src/app/components/categorias/list-videos/list-videos.component.ts","./src/app/components/categorias/list-videos/list-videos.component.html","./src/app/components/categorias/lista-categoria/lista-categoria.component.ts","./src/app/components/categorias/lista-categoria/lista-categoria.component.html","./src/app/models/categoria.model.ts"],"names":[],"mappings":"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","file":"components-categorias-categorias-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { DetalleCategoriaComponent } from './detalle-categoria/detalle-categoria.component';\nimport { ListVideosComponent } from './list-videos/list-videos.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: ListaCategoriaComponent\n  },\n  {\n    path: 'form', component: DetalleCategoriaComponent\n  },\n  {\n    path: 'form/:id', component: DetalleCategoriaComponent\n  },\n  {\n    path: 'list-videos', component: ListVideosComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CategoriasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CategoriasRoutingModule } from './categorias-routing.module';\nimport { ListaCategoriaComponent } from './lista-categoria/lista-categoria.component';\nimport { DetalleCategoriaComponent } from './detalle-categoria/detalle-categoria.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListVideosComponent } from './list-videos/list-videos.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\n\n@NgModule({\n  declarations: [ListaCategoriaComponent, DetalleCategoriaComponent, ListVideosComponent],\n  imports: [\n    CommonModule,\n    CategoriasRoutingModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule\n  ],\n  exports: [\n    ListaCategoriaComponent, DetalleCategoriaComponent, ListVideosComponent\n  ]\n})\nexport class CategoriasModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Categoria } from '../../../models/categoria.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoriaService } from '../../../services/categoria.service';\nimport Swal from 'sweetalert2';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-detalle-categoria',\n  templateUrl: './detalle-categoria.component.html',\n  styleUrls: ['./detalle-categoria.component.css']\n})\nexport class DetalleCategoriaComponent implements OnInit {\n\n  public categoria: Categoria = new Categoria();\n  public categoriaForm: FormGroup;\n  public consulta: boolean = false;\n\n  constructor(private fb: FormBuilder,\n              private activatedRoute: ActivatedRoute,\n              private _categoriaService: CategoriaService,\n              private router: Router,\n              private _translateService: TranslateService) { }\n\n  get nombre(){ return this.categoriaForm.get('nombre'); }\n\n  get descripcion(){ return this.categoriaForm.get('descripcion'); }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      let id:number = +params.get('id');\n      if(id !== 0){\n        this.consulta = true;\n        this._categoriaService.obtenerCategoria(id).subscribe(categoria => this.asignarValores(categoria));\n      }\n    });\n    this.initForm();\n\n  }\n\n  public initForm(): void {\n    this.categoriaForm = this.fb.group({\n      nombre: [{value:'' , disabled: this.consulta}, Validators.required],\n      descripcion: [{value:'' , disabled: this.consulta}, Validators.required]\n    });\n  }\n\n  public asignarValores(categoria: Categoria) : void {\n    this.categoria = categoria;\n    this.categoriaForm.setValue({\n      nombre: categoria.nombre,\n      descripcion: categoria.descripcion\n    });\n  }\n\n  public guardarCategoria() : void {\n\n    if(this.categoriaForm.invalid){ return;}\n\n    const { nombre, descripcion } = this.categoriaForm.value;\n\n    this.categoria.nombre = nombre;\n    this.categoria.descripcion = descripcion;\n\n    this._categoriaService.crearCategoria(this.categoria)\n      .subscribe(categoria => {\n        Swal.fire(this._translateService.instant('DIALOG.CATEGORY_ADD'), `${this._translateService.instant('DIALOG.CATEGORY_ADD_TEXT')} ${categoria.nombre} ${this._translateService.instant('DIALOG.ADDED_SUCCESSFUL')}`,'success');\n        this.router.navigate(['/categorias']);\n      },\n      err => {\n        Swal.fire({\n          title: `${this._translateService.instant('DIALOG.ERROR_TITLE')}`,\n          text:  err.error.error,\n          icon: 'error'\n        })\n      }\n    );\n  }\n\n  public eliminarCategoria(): void {\n    Swal.fire({\n      title: this._translateService.instant('DIALOG.DELETE_TITLE'),\n      text: `${this._translateService.instant('DIALOG.CATEGORY_DELETE_ASK')} ${this.categoria.nombre} ?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: this._translateService.instant('DIALOG.DELETE_YES'),\n      cancelButtonText: this._translateService.instant('DIALOG.DELETE_NO'),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this._categoriaService.borrarCategoria(this.categoria.id).subscribe(resp => {\n          Swal.fire(\n            this._translateService.instant('DIALOG.CATEGORY_DELETED'),\n            `${resp}`,\n            'success'\n          )\n          this.router.navigate(['categorias']);\n        },\n        err => {\n          Swal.fire({\n            title: `${this._translateService.instant('DIALOG.ERROR_TITLE')}`,\n            text:  err.error.error,\n            icon: 'error'\n          })\n        });\n        \n      }\n    })\n  }\n\n}\n","<div class=\"card mt-2\">\n    <div class=\"card-header text-center bg-card text-white\" *ngIf=\"!consulta\">{{ \"CATEGORY.ADD_CATEGORY_TITLE\" | translate}}</div>\n    <div class=\"card-header text-center bg-card text-white\" *ngIf=\"consulta\"> {{ \"CATEGORY.CONSULT_CATEGORY_TITLE\" | translate}} </div>\n    <div class=\"card-body txt-content\">\n        <form [formGroup]=\"categoriaForm\" (ngSubmit)=\"guardarCategoria()\">\n            <div class=\"form-group row\">\n                <label class=\"col-form-label col-sm-2\">{{ \"CATEGORY.NAME\" | translate}} </label>\n                <input [class.is-invalid]=\"nombre.invalid && nombre.touched\" type=\"text\" formControlName=\"nombre\" class=\"form-control\" required>\n                <small class=\"text-danger \" *ngIf=\"nombre.invalid && nombre.touched \">{{ \"VALIDATION.NAME_REQUIRED\" | translate}}</small>\n            </div>\n            <div class=\"form-group row\">\n                <label class=\"col-form-label col-sm-2\">{{ \"CATEGORY.DESCRIPTION\" | translate}} </label>\n                <input [class.is-invalid]=\"descripcion.invalid && descripcion.touched\" type=\"text\" formControlName=\"descripcion\" class=\"form-control\" required>\n                <small class=\"text-danger \" *ngIf=\"descripcion.invalid && descripcion.touched \">{{ \"VALIDATION.DESCRIPTION_REQUIRED\" | translate}}</small>\n            </div>\n            <div class=\"form__content-submit\">\n                <button type=\"submit\" *ngIf=\"!consulta\" [disabled]=\"categoriaForm.invalid\" class=\"form__submit\">\n                    <i class='bx bx-save icon-style'></i>\n                    {{ 'SHARED.BUTTONS.SAVE' | translate }}\n                </button>\n                <button type=\"button\" (click)=\"eliminarCategoria()\" *ngIf=\"consulta\" class=\"form__submit\">\n                    <i class='bx bx-trash icon-style'></i>\n                    {{ 'SHARED.BUTTONS.DELETE' | translate }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ColumnMode, SelectionType } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-list-videos',\n  templateUrl: './list-videos.component.html',\n  styleUrls: ['./list-videos.component.css']\n})\nexport class ListVideosComponent implements OnInit {\n\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\n\n  data = [];\n  cols = [];\n  SelectionType = SelectionType;\n  selected = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() { \n    this.fetch(data => {\n      this.data = data.splice(0, 5);\n    });\n  }\n\n  ngOnInit(): void {\n    this.cols = [\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'imagen'\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'title'\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'subtitle'\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'views'\n      }\n    ];\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n}\n","<div>\n    <ngx-datatable class=\"material\" [rows]=\"data\" [columns]=\"cols\" [columnMode]=\"ColumnMode.force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"3\" [selected]=\"selected\" [selectionType]=\"SelectionType.single\" (select)=\"onSelect($event)\">\n    </ngx-datatable>\n    <ng-template #hdrTpl let-column=\"column\">{{ column.name }}</ng-template>\n    <ng-template #editTmpl let-row=\"row\" let-column=\"column\" let-value=\"value\">\n        <img class=\"video-image\" [src]=\"value\" *ngIf=\"column.name === 'imagen'\">\n        <ng-container *ngIf=\"column.name !== 'imagen'\">\n            {{ value }}\n        </ng-container>\n\n    </ng-template>\n</div>","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { Categoria } from '../../../models/categoria.model';\nimport { CategoriaService } from '../../../services/categoria.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ColumnMode, SelectionType } from '@swimlane/ngx-datatable';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-lista-categoria',\n  templateUrl: './lista-categoria.component.html',\n  styleUrls: ['./lista-categoria.component.css']\n})\nexport class ListaCategoriaComponent implements OnInit {\n\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\n\n  public data = [];\n  public cols = [];\n  public selected = [];\n  public SelectionType = SelectionType;\n  public ColumnMode = ColumnMode;\n  public categorias: Categoria[] = [];\n\n  constructor(private _categoriaService: CategoriaService,\n              private _translateService: TranslateService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.initColumnsTable();\n    this._categoriaService.getCategorias().subscribe(resp => {\n      this.categorias = resp;\n      this.data = resp;\n    });\n  }\n\n  public initColumnsTable(): void {\n    this.cols = [\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: this._translateService.instant('CATEGORY.ID')\n      },\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: this._translateService.instant('CATEGORY.NAME')\n      }\n    ];\n  }\n\n  onSelect({ selected }) {\n    this.router.navigate(['/categorias/form/',selected[0].id]);\n  }\n\n}\n","<div class=\"card mb-3\">\n    <div class=\"card-header text-center bg-card text-white\"> {{ \"CATEGORY.CATEGORY_TITLE\" | translate}} </div>\n    <div class=\"card-body txt-content\">\n        <h5 class=\"card-title\">{{ \"CATEGORY.CATEGORY_LIST\" | translate }}</h5>\n        <div class=\"mb-3 form__content-submit\">\n            <button type=\"button\" class=\"form__submit\" routerLink=\"/categorias/form\">\n                <i class='bx bxs-folder-plus icon-style'></i>\n                {{ \"SHARED.BUTTONS.ADD_CATEGORY\" | translate }}\n            </button>\n        </div>\n        <ngx-datatable class=\"material\" [rows]=\"data\" [columns]=\"cols\" [columnMode]=\"ColumnMode.force\" [headerHeight]=\"50\" [footerHeight]=\"50\" rowHeight=\"auto\" [limit]=\"5\" [selected]=\"selected\" [selectionType]=\"SelectionType.single\" (select)=\"onSelect($event)\">\n        </ngx-datatable>\n        <ng-template #hdrTpl let-column=\"column\">{{ column.name }}</ng-template>\n        <ng-template #editTmpl let-row=\"row\" let-column=\"column\" let-value=\"value\">\n            <ng-container>\n                {{ value }}\n            </ng-container>\n\n        </ng-template>\n    </div>\n\n</div>","export class Categoria {\r\n    id: number;\r\n    nombre: string;\r\n    descripcion: string;\r\n}"],"sourceRoot":"webpack:///"}